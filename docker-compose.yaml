version: "2"
services:
  auth_service_1:
    build: ./api/auth-service
    restart: "always"
    environment:
      - REDIS_URL=redis://cache
      - REDIS_PASS=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ./api/auth-service:/usr/app/
      - /usr/app/node_modules
  auth_service_2:
    build: ./api/auth-service
    restart: "always"
    environment:
      - REDIS_URL=redis://cache
      - REDIS_PASS=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ./api/auth-service:/usr/app/
      - /usr/app/node_modules
  score_service_1:
    build: ./api/score-service
    restart: "always"
    environment:
      - REDIS_URL=redis://cache
      - REDIS_PASS=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ./api/score-service:/usr/app/
      - /usr/app/node_modules
  core_service_1:
    build: ./api/core-service
    restart: always
    environment:
      - REDIS_URL=redis://cache
      - REDIS_PASS=eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ./api/core-service:/usr/app/
      - /usr/app/node_modules
  front1:
    build: ./front_ms
    volumes:
      - ./front_ms:/app
      - "/app/node_modules"
    ports:
      - "8081:3000"
  haproxy:
    build: .
    restart: "always"
    ports:
      - "3000:3000"
  cache:
    image: redis:latest
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
